{"version":3,"sources":["components/DataStore.js","components/comments/EditComment.js","components/comments/Comment.js","components/comments/CreateComment.js","components/comments/CommentsContainer.js","components/articles/ArticlePost.js","components/articles/ArticleContainer.js","components/articles/CreateArticle.js","components/Filter.js","components/articles/Articles.js","components/auth/Registration.js","components/auth/Login.js","components/Nav.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["DataStore","users","articles","comments","decorate","observable","store","EditComment","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","state","content","length","user","id","comment","user_id","Axios","patch","then","res","console","log","onSubmit","this","type","onChange","Component","Comment","getUser","get","currentUser","data","className","email","created_at","onClick","deleteComment","article","CreateComment","post","article_id","getNewComments","placeholder","CommentsContainer","observer","populateComments","reverse","response","reqComment","filter","fetch","method","loggedInStatus","map","key","ArticlePost","truncate","str","num_words","split","splice","join","clickHandler","title","url","individualPost","description","ArticleContainer","show","openArticle","takeMeHome","CreateArticle","desc","getNewArticles","Filter","filters","toLowerCase","filterArticles","forEach","includes","clearFilter","removeKeyword","keyword","Articles","history","pushToRoute","React","Registration","password","password_confirmation","withCredentials","status","handleSuccessfulAuth","catch","error","registrationError","required","Login","axios","logged_in","fieldReset","loginError","Nav","handleLogout","createBrowserHistory","Home","handleLogin","delete","populateStore","checkLoginStatus","loggedIn","currentArticleID","push","exact","path","render","find","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a09d2ed9.chunk.js","sourcesContent":["import { decorate, observable } from 'mobx'\n// import { observer } from 'mobx-react';\n\nclass DataStore {\n    users = [];\n    articles = [];\n    comments = [];\n}\n\ndecorate(DataStore, {\n    users: observable,\n    articles: observable,\n    comments: observable\n})\n\n\n\nlet store = new DataStore()\n\nexport default store\n\n// class Timer {\n//   start = Date.now();\n//   current = Date.now();\n//   get elapsedTime() {\n//     return this.current - this.start + \"milliseconds\";\n//   }\n//   tick() {\n//     this.current = Date.now();\n//   }\n// }\n// decorate(Timer, {\n//   start: observable,\n//   current: observable,\n//   elapsedTime: computed,\n//   tick: action,\n// });","import React, { Component } from 'react';\nimport Axios from \"axios\";\n\n\nclass EditComment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: props.comment.content,\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    // console.log(this.props.user)\n    event.preventDefault();\n    if (this.state.content.length !== 0 && this.props.user.id === this.props.comment.user_id) {\n      Axios.patch(`http://localhost:3001/comments/${this.props.comment.id}`, {\n        comment: {\n          content: this.state.content\n        },\n      }).then((res) => {\n        console.log(res);\n        // this.props.getNewComments(res.data.comment);\n      });\n\n    //   this.setState({\n    //     content: \"\",\n    //   });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"content\"\n            name=\"content\"\n            value={this.state.content}\n            onChange={this.handleChange}\n          ></input>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditComment;","import React, { Component } from \"react\";\n// import \"./Comment.css\";\n// import store from \"../DataStore\";\n// import { observer } from \"mobx-react\";\nimport Axios from \"axios\";\nimport EditComment from \"./EditComment\";\n\nclass Comment extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentUser: [],\n    };\n  }\n  getUser = () => {\n    // console.log(this.props.comment.user_id);\n    Axios.get(`http://localhost:3001/users/${this.props.comment.user_id}`).then(\n      (user) => {\n        // console.log(user)\n        this.setState({\n          currentUser: user.data,\n        });\n      }\n    );\n    // console.log(this.state.currentUser);\n  };\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  render() {\n    return (\n      <div className=\"Comments\">\n        <h4>{`${this.state.currentUser.email} says:`}</h4>\n        <p>{this.props.comment.content}</p>\n        <span className=\"Timestamp\">{this.props.comment.created_at}</span>\n        {this.props.user.id === this.props.comment.user_id ? (\n          <button\n            onClick={() => this.props.deleteComment(this.props.comment)}\n          >\n            Delete Comment\n          </button>\n        ) : null}\n\n        {this.state.currentUser.id === this.props.comment.user_id ? (\n          <EditComment\n            user={this.props.user}\n            comment={this.props.comment}\n            article={this.props.article}\n          ></EditComment>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Comment;\n","import React, { Component } from \"react\";\nimport Axios from 'axios'\n\nclass CreateComment extends Component {\n  constructor() {\n    super();\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    // console.log(this.props.user)\n    event.preventDefault();\n    if (\n      this.state.content.length !== 0\n    ) {\n      Axios.post(\"http://localhost:3001/comments\", {\n        comment: {\n          user_id: this.props.user.id,\n          content: this.state.content,\n          article_id: this.props.article.id\n        },\n      }).then((res) => {\n        console.log(res);\n        this.props.getNewComments(res.data.comment);\n      });\n\n      this.setState({\n        content: \"\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"content\"\n            name=\"content\"\n            placeholder=\"Comment Content\"\n            value={this.state.content}\n            onChange={this.handleChange}\n          ></input>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CreateComment;\n","import React, { Component } from \"react\";\nimport store from \"../DataStore\";\nimport Comment from \"./Comment\";\nimport { observer } from \"mobx-react\";\nimport Axios from \"axios\";\nimport CreateComment from \"./CreateComment\";\nimport '../Grid.css'\n\nconst CommentsContainer = observer(\n  class CommentsContainer extends Component {\n    // filterComments = () => {\n    //   let filtered = store.comments.filter(\n    //     (comment) => comment.article_id === this.props.article.id\n    //   );\n    //   console.log(store.comments)\n    //   return filtered;\n    // };\n\n    populateComments = () => {\n      Axios.get(`http://localhost:3001/articles/${this.props.article.id}`).then(\n        (article) => {\n          // console.log(article)\n          store.comments = article.data.comments.reverse();\n        }\n      );\n    };\n\n    getNewComments = (response) => {\n      store.comments = [response, ...store.comments];\n    };\n\n    componentDidMount() {\n      this.populateComments();\n    }\n\n    deleteComment = (reqComment) => {\n      if (this.props.user.id === reqComment.user_id) {\n        console.log(reqComment)\n        store.comments = [\n          ...store.comments.filter((comment) => reqComment.id !== comment.id),\n        ];\n\n        // Axios.delete(`http://localhost:3001/comments/${id}`);\n        fetch(`http://localhost:3001/comments/${reqComment.id}`, {\n            method: \"DELETE\"\n        }).then(res => console.log(res));\n      }\n    };\n\n    render() {\n      return (\n        <div>\n          {this.props.loggedInStatus === \"LOGGED_IN\" ? (\n            <CreateComment\n              user={this.props.user}\n              article={this.props.article}\n              getNewComments={this.getNewComments}\n            ></CreateComment>\n          ) : null}\n\n          {store.comments.map((comment) => (\n            <Comment\n              user={this.props.user}\n              key={comment.id}\n              comment={comment}\n              getNewComments={this.getNewComments}\n              deleteComment={this.deleteComment}\n            ></Comment>\n          ))}\n        </div>\n      );\n    }\n  }\n);\n\nexport default CommentsContainer;\n","import React, { Component } from \"react\";\n// import \"./ArticlePost.css\";\nimport CommentsContainer from \"../comments/CommentsContainer\";\n// import store from \"./DataStore\";\nimport Axios from \"axios\";\nimport '../Grid.css'\n\nclass ArticlePost extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentUser: [],\n    };\n  }\n  getUser = () => {\n    // console.log(this.props.article.user_id);\n    Axios.get(`http://localhost:3001/users/${this.props.article.user_id}`).then(\n      (user) => {\n        // console.log(user)\n        this.setState({\n          currentUser: user.data,\n        });\n      }\n    );\n    // console.log(this.state.currentUser);\n  };\n\n  componentDidMount() {\n    this.getUser();\n  }\n  truncate = (str, num_words) => {\n    return str.split(\" \").splice(0, num_words).join(\" \") + \"...\";\n  };\n\n  render() {\n    return (\n      <div className=\"post-grid-container\">\n        <div onClick={() => this.props.clickHandler(this.props.article)}>\n          <p className=\"Title\">Title: {this.props.article.title}</p>\n          <p className=\"URL\">Source: {this.props.article.url}</p> \n          {this.props.individualPost ? (\n            <p className=\"Description\">Descripton: {this.props.article.description}</p>\n          ) : (\n            <p className=\"Description\">\n              Description: {this.truncate(this.props.article.description, 25)}\n            </p>\n          )}\n        </div>\n\n        <div className=\"Sourcefinder\">Sourcefinder: {this.state.currentUser.email}</div>\n        <div className=\"Timestamp\"> {this.props.article.created_at} </div>\n        {this.props.individualPost ? (\n          <CommentsContainer\n            user={this.props.user}\n            article={this.props.article}\n            loggedInStatus={this.props.loggedInStatus}\n          ></CommentsContainer>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ArticlePost;\n","import React, { Component } from \"react\";\nimport ArticlePost from \"./ArticlePost\";\nimport store from \"../DataStore.js\";\nimport { observer } from \"mobx-react\";\n// import ArticleModal from \"./ArticleModal\";\n// import { Modal } from \"semantic-ui-react\";\nimport \"../Grid.css\";\n\n// import Axios from \"axios\";\n// const filteredArticles = []\n\nconst ArticleContainer = observer(\n  class ArticleContainer extends Component {\n    // constructor(){\n    //   super()\n    //   this.state = {\n    //     articles: []\n    //   }\n    // }\n    // componentDidMount() {\n    //   this.setState({\n    //     articles:\n    //   })\n    // }\n\n    render() {\n      return (\n        <div>\n          {store.articles.filter(article => article.show !== false).map((article) => (\n            <div key={article.id}>\n              <ArticlePost\n                article={article}\n                clickHandler={this.props.openArticle}\n                takeMeHome={this.props.takeMeHome}\n                loggedInStatus={this.props.loggedInStatus}\n              />\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n);\n\nexport default ArticleContainer;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport \"../Grid.css\";\n\nclass CreateArticle extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\",\n      url: \"\",\n      desc: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    // console.log(this.props.user)\n    event.preventDefault();\n    if (\n      this.state.title.length !== 0 &&\n      this.state.url.length !== 0 &&\n      this.state.desc.length !== 0\n    ) {\n      Axios.post(\"http://localhost:3001/articles\", {\n        article: {\n          user_id: this.props.user.id,\n          title: this.state.title,\n          url: this.state.url,\n          desc: this.state.desc,\n        },\n      }).then((res) => {\n        console.log(res);\n        this.props.getNewArticles(res.data.article);\n      });\n\n      this.setState({\n        title: \"\",\n        url: \"\",\n        desc: \"\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"create-article-grid-container\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            className=\"t_title\"\n            type=\"title\"\n            name=\"title\"\n            placeholder=\"Tutorial Title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          ></input>\n          <input\n            className=\"t_url\"\n            type=\"url\"\n            name=\"url\"\n            placeholder=\"Tutorial URL\"\n            value={this.state.url}\n            onChange={this.handleChange}\n          ></input>\n          <br></br>\n          <label>\n            <br></br>\n            <textarea\n              className=\"t_desc\"\n              name=\"desc\"\n              value={this.state.desc}\n              onChange={this.handleChange}\n              placeholder=\"Tutorial Description\"\n            />\n          </label>\n          <button className=\"t_submit\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CreateArticle;","import React, { Component } from \"react\";\nimport store from \"./DataStore\";\nimport { observer } from \"mobx-react\";\nimport \"./Grid.css\";\n\nconst Filter = observer(\n  class Filter extends Component {\n    constructor() {\n      super();\n      this.state = {\n        content: \"\",\n        filters: [],\n      };\n    }\n\n    componentDidMount() {\n      console.log(this.state.filters);\n    }\n\n    componentDidUpdate() {\n      this.filterArticles(store.articles);\n    }\n\n    handleChange = (event) => {\n      this.setState({\n        content: event.target.value,\n      });\n    };\n\n    handleSubmit = (event) => {\n      // console.log(this.props.user)\n      event.preventDefault();\n      //   store.filter.push(\"test\")\n      if (event.target.filter.value.length > 0) {\n        // console.log(event.target.filter.value);\n        this.setState({\n          filters: [...this.state.filters, event.target.filter.value.toLowerCase()],\n          content: \"\",\n        });\n        //   console.log(this.state.filter);\n        // console.log(store.articles)\n\n        // don't run below line until state sets | how do?\n      }\n    };\n\n    filterArticles = (articles) => {\n      // if filter is empty pass article through\n    //   console.log(this.state.filters);\n    //   const includedArticles = [];\n\n      articles.forEach((article) => {\n        // let includeArticle = true;\n        this.state.filters.forEach((filter) => {\n          if (!article.title.toLowerCase().includes(filter)) {\n            article.show = false;\n          }\n        });\n      });\n\n      //   for (let j = 0; j < articles.length; j++) {\n      //     // console.log(articles[j].title);\n      //     const includeArticle = false;\n      //     for (let i = 0; i < this.state.filters.length; i++) {\n      //       console.log(this.state.filters[i]);\n      //       if (articles[j].title.includes(this.state.filters[i])) {\n      //         includeArticle = true;\n      //       } else {\n      //         includeArticle = false;\n      //         break;\n      //       }\n      //     }\n\n      //     if (includeArticle === true) {\n      //       allowed.push(articles[j]);\n      //     }\n      //   }\n      //   console.log(allowed);\n    //   store.articles = includedArticles;\n    };\n\n    // filterArray = (array, filters) => {\n    //   const filterKeys = Object.keys(filters);\n    //   return array.filter((item) => {\n    //     // validates all filter criteria\n    //     return filterKeys.every((key) => {\n    //       // ignores non-function predicates\n    //       if (typeof filters[key] !== \"function\") return true;\n    //       return filters[key](item[key]);\n    //     });\n    //   });\n    // };\n\n    clearFilter = () => {\n      this.setState({\n        filters: [],\n      });\n      store.articles.forEach(article => article.show = true)\n      //   console.log(this.state.filters)\n    };\n\n    removeKeyword = (key) => {\n        this.setState({\n            filters: [...this.state.filters.filter((keyword) => keyword !== key)],\n        });\n        //figure out the sync issue | get below lines to run AFTER state set\n      this.clearFilter();\n      this.filterArticles(store.articles)\n    };\n\n    render() {\n      return (\n        <div className=\"Filter\">\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"filter\"\n              name=\"filter\"\n              placeholder=\"Type a Keyword\"\n              value={this.state.content}\n              onChange={this.handleChange}\n            ></input>\n            <button type=\"submit\">Add a Filter Keyword</button>\n            <button onClick={this.clearFilter}>Clear Filter</button>\n          </form>\n          {/* {store.filter[1] || store.filter[0] !== \"\"\n            ? store.filter\n                .filter((keyword) => keyword !== \"\") */}\n          {\n            this.state.filters.map((keyword) => (\n              <button key={keyword} onClick={() => this.removeKeyword(keyword)}>\n                {keyword}\n              </button>\n            ))\n            // : null\n          }\n        </div>\n      );\n    }\n  }\n);\n\nexport default Filter;\n","import React from \"react\";\nimport ArticleContainer from \"./ArticleContainer\";\nimport store from \"../DataStore.js\";\nimport { observer } from \"mobx-react\";\n// import Axios from \"axios\";\nimport CreateArticle from \"./CreateArticle\";\nimport Filter from '../Filter.js'\nimport '../Grid.css'\n\nconst Articles = observer(\n  class Articles extends React.Component {\n    // populateStore = () => {\n    //   Axios.get(\"http://localhost:3001/articles\").then((articles) => {\n    //     store.articles = articles.data;\n    //     // console.log(store.articles);\n    //   });\n    // };\n\n    // componentDidMount() {\n    //   this.populateStore();\n    // }\n\n    getNewArticles = (response) => {\n      store.articles = [response, ...store.articles];\n    };\n\n    render() {\n      // console.log(this.props.store)\n      return (\n        <div className=\"Articles\">\n          {this.props.loggedInStatus === \"LOGGED_IN\" ? (\n            <CreateArticle\n              user={this.props.user}\n              history={this.props.pushToRoute}\n              getNewArticles={this.getNewArticles}\n            />\n          ) : null}\n          <Filter></Filter>\n\n          <ArticleContainer\n            loggedInStatus={this.props.loggedInStatus}\n            user={this.props.user}\n            openArticle={this.props.openArticle}\n            takeMeHome={this.props.takeMeHome}\n          />\n        </div>\n      );\n    }\n  }\n);\n\nexport default Articles;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport '../Grid.css'\n// import JsonApi from \"devour-client\";\n\n// const jsonApi = new JsonApi({ apiUrl: \"http://localhost:3001\" });\n\n// jsonApi.define(\"registration\", {\n//   user: {\n//     email: \"\",\n//     password: \"\",\n//     password_confirmation: \"\"\n//   },\n// });\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      registrationError: \"\"\n    };\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    Axios\n      .post(\n        \"http://localhost:3001/registrations\",\n        {\n          user: {\n            email: this.state.email,\n            password: this.state.password,\n            password_confirmation: this.state.password_confirmation,\n          },\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        if(res.data.status === 'created') {\n        this.props.handleSuccessfulAuth(res.data)\n        }\n      })\n      .catch((error) => {\n        this.setState({\n          registrationError: error\n        });\n      });\n\n      // this.fieldReset();\n    // console.log(event);\n    // jsonApi.create(\"registration\", {\n    //   user: {\n    //     email: this.state.email,\n    //     password: this.state.password,\n    //     password_confirmation: this.state.password_confirmation\n    //   },\n    // }).catch(errors => console.log(errors));\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // fieldReset = () => {\n  //   this.setState({\n  //     email: \"\",\n  //     password: \"\",\n  //     password_confirmation: \"\",\n  //   });\n  // };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            className=\"form-input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email Address\"\n            value={this.state.email}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            className=\"form-input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            className=\"form-input\"\n            type=\"password\"\n            name=\"password_confirmation\"\n            placeholder=\"Password Confirmation\"\n            value={this.state.password_confirmation}\n            onChange={this.handleChange}\n            required\n          />\n          <button type=\"submit\">Register</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Registration;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { button } from 'semantic-ui-react'\n// import JsonApi from \"devour-client\";\n\n// const jsonApi = new JsonApi({ apiUrl: \"http://localhost:3001\" });\n\n// jsonApi.define(\"registration\", {\n//   user: {\n//     email: \"\",\n//     password: \"\",\n//     password_confirmation: \"\"\n//   },\n// });\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loginError: \"\",\n    };\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    axios\n      .post(\n        \"http://localhost:3001/sessions \",\n        {\n          user: {\n            email: this.state.email,\n            password: this.state.password\n          },\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        console.log(\"res from Login: \", res)\n        if (res.data.logged_in) {\n          this.props.handleSuccessfulAuth(res.data);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Login error: \", error)\n        // this.setState({\n        //   registrationError: error,\n        // });\n      });\n\n    this.fieldReset();\n    // console.log(event);\n    // jsonApi.create(\"registration\", {\n    //   user: {\n    //     email: this.state.email,\n    //     password: this.state.password,\n    //     password_confirmation: this.state.password_confirmation\n    //   },\n    // }).catch(errors => console.log(errors));\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  fieldReset = () => {\n    this.setState({\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email Address\"\n            value={this.state.email}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n            required\n          />\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Registration from \"./auth/Registration.js\";\nimport Login from \"./auth/Login.js\";\nimport './Grid.css'\n\nclass Nav extends Component {\n  render() {\n    return (\n      <div className=\"nav\">\n        {this.props.loggedInStatus === \"LOGGED_IN\" ? (\n          <div>\n            <span>{this.props.user.email}</span>\n            <div><button onClick={this.props.handleLogout}>Log Out</button></div>\n          </div>\n        ) : (\n          <div>\n            <Registration\n              className=\"registration\"\n              handleSuccessfulAuth={this.props.handleSuccessfulAuth}\n              user={this.props.user}\n            />\n            <Login\n              className=\"login\"\n              handleSuccessfulAuth={this.props.handleSuccessfulAuth}\n              user={this.props.user}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { observer } from \"mobx-react\";\nimport store from \"./DataStore\";\nimport Articles from \"./articles/Articles\";\nimport ArticlePost from \"./articles/ArticlePost\";\nimport Nav from \"./Nav\";\n// import Filter from \"./Filter\"\nimport './Grid.css'\nimport \"semantic-ui-css/semantic.min.css\";\n\nconst history = createBrowserHistory();\n\nconst Home = observer(\n  class Home extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loggedInStatus: \"NOT_LOGGED_IN\",\n        user: {},\n        currentArticleID: 0,\n      };\n    }\n\n    handleLogin = (data) => {\n      this.setState({\n        loggedInStatus: \"LOGGED_IN\",\n        user: data.user,\n      });\n    };\n\n    handleLogout = () => {\n      this.setState({\n        loggedInStatus: \"NOT_LOGGED_IN\",\n        user: {},\n      });\n      Axios.delete(\"http://localhost:3001/logout\", {\n        withCredentials: true,\n      }).catch((error) => {\n        console.log(\"Errors: \", error);\n      });\n    };\n\n    populateStore = () => {\n      Axios.get(\"http://localhost:3001/articles\").then((articles) => {\n        store.articles = articles.data;\n        // console.log(store.articles);\n      });\n    };\n\n    componentDidMount() {\n      // console.log(this.props);\n      this.checkLoginStatus();\n      this.populateStore();\n    }\n\n    handleSuccessfulAuth = (data) => {\n      this.handleLogin(data);\n      // history.push(\"/\");\n    };\n\n    checkLoginStatus = () => {\n      Axios.get(\"http://localhost:3001/logged_in\", { withCredentials: true })\n        .then((res) => {\n          console.log(res);\n          if (\n            res.data.logged_in &&\n            this.state.loggedInStatus === \"NOT_LOGGED_IN\"\n          ) {\n            this.setState({\n              loggedInStatus: \"LOGGED_IN\",\n              user: res.data.user,\n            });\n          } else if (\n            !res.data.loggedIn &&\n            this.state.loggedInStatus === \"LOGGED_IN\"\n          ) {\n            this.setState({\n              loggedInStatus: \"NOT_LOGGED_IN\",\n              user: {},\n            });\n          }\n          // console.log(res)\n        })\n        .catch((error) => {\n          console.log(\"Check login error: \", error);\n        });\n    };\n\n    openArticle = (article) => {\n      //   console.log(article.id)\n      this.setState({\n        currentArticleID: article.id,\n      });\n      history.push(`/articles/${article.id}`);\n    };\n\n    takeMeHome = () => {\n      history.push(\"/\");\n    };\n\n    render() {\n      return (\n        <div className=\"grid-container\">\n          <Nav\n            loggedInStatus={this.state.loggedInStatus}\n            handleSuccessfulAuth={this.handleSuccessfulAuth}\n            handleLogout={this.handleLogout}\n            user={this.state.user}\n          />\n          {/* <ArticleModal article={{url: \"blah\"}}/> */}\n          \n          <Router history={history}>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={(props) => (\n                  <Articles\n                    loggedInStatus={this.state.loggedInStatus}\n                    user={this.state.user}\n                    history={history}\n                    openArticle={this.openArticle}\n                  />\n                )}\n              ></Route>\n              <Route exact path={`/articles/${this.state.currentArticleID}`}>\n                <ArticlePost\n                  loggedInStatus={this.state.loggedInStatus}\n                  user={this.state.user}\n                  article={store.articles.find(\n                    (article) => article.id === this.state.currentArticleID\n                  )}\n                  individualPost={true}\n                  clickHandler={this.takeMeHome}\n                ></ArticlePost>\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      );\n    }\n  }\n);\n\nexport default Home;\n","import React, { Component } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport Home from \"./components/Home\";\n\nclass App extends Component {\n  // componentDidMount= () => {\n  //   console.log(history)\n  // }\n  render() {\n    return (\n      <div>\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createBrowserHistory } from \"history\";\nimport { Router } from \"react-router-dom\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}